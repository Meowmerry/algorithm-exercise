@startuml devtools
entity npmPackage 
boundary Window
control contentScript
boundary Chrome
boundary ChromePort

control backgroundScript
control MainContainer
control D3Tree


backgroundScript -> ChromePort : chrome.runtime.onConnect.\naddListener((port));
contentScript -> Window : window.\naddEventListener('message');

npmPackage -> Window : 1.) postMessage({action:'NpmToContent', \npayload: treeGraph})
Window <- contentScript : 2.) receives Window action \n'NpmToContent'
contentScript -> Chrome : 3.) chrome.runtime.sendMessage
Chrome <- backgroundScript : 4.) receives Chrome Message \nvia chrome.runtime.onMessage.\naddListener
backgroundScript -> ChromePort : 5.) post message to ChromePort.
ChromePort <- MainContainer : 6.) receives message. 
MainContainer -> D3Tree : 7.) get treeGraph and \npresent information on D3Tree

@enduml